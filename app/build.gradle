apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'de.mobilej.unmock'

android {
    compileSdk 34

    defaultConfig {
        applicationId "com.serwylo.lexica"
        minSdkVersion 18
        targetSdkVersion 34
        versionCode 30018
        versionName "3.13.1"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }


    buildTypes {
        all {
            minifyEnabled false
            shrinkResources false
        }
    }

    buildFeatures {
        viewBinding true
    }

    testOptions {
        // http://tools.android.com/tech-docs/unit-testing-support#TOC-Method-...-not-mocked.-
        unitTests.returnDefaultValues = true
    }

    compileOptions {
        encoding "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        jniLibs {
            excludes += ['META-INF/*']
        }
        resources {
            excludes += ['META-INF/*']
        }
    }

    namespace 'com.serwylo.lexica'

    lint {
        // Due to getting the following error with Travis CI:
        //   /home/travis/build/lexica/lexica/app: Error: The SDK platform-tools version ((21)) is too old  to check APIs compiled with API 23; please update [NewApi]
        // Until the newer version of platform-tools is installed on their CI server, lets not consider it a failure.
        abortOnError false

        // The translations are crowd-sourced, and so will likely never be 100% complete for all locales.
        disable 'MissingTranslation', 'GoogleAppIndexingWarning'

        // Ouptuts report during build, so that it can be seen in the CI log.
        textReport true
    }
}

unMock {
    // All three of these seem required to get Uri working in tests: https://stackoverflow.com/a/47529360
    keep "android.net.Uri"
    keepAndRename "java.nio.charset.Charsets" to "xjava.nio.charset.Charsets"
    keepStartingWith "libcore."
}

dependencies {
    implementation project(':libraries:trie')
    implementation project(':libraries:liblexica')

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.browser:browser:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    api 'com.google.android.material:material:1.3.0'

    implementation 'io.github.tonnyl:whatsnew:0.1.7'

    implementation 'com.google.zxing:core:3.3.0'

    implementation 'androidx.room:room-runtime:2.4.1'
    kapt 'androidx.room:room-compiler:2.4.1'

    testImplementation "junit:junit:4.13.1"
    testImplementation "org.mockito:mockito-core:3.5.13"
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test:core:1.5.0'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'

    androidTestImplementation 'tools.fastlane:screengrab:2.1.1', {
        exclude group: 'androidx.test.uiautomator', module: 'uiautomator'
    }
    implementation "androidx.core:core-ktx:1.3.2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // dependency to android-all to use
    unmock 'org.robolectric:android-all:4.3_r2-robolectric-0'
}

afterEvaluate {
    generateDebugResources.dependsOn rootProject.buildDictionaries
    generateDebugResources.shouldRunAfter rootProject.buildDictionaries
    if (tasks.findByPath('generateReleaseResources')) {
        generateReleaseResources.dependsOn rootProject.buildDictionaries
        generateReleaseResources.shouldRunAfter rootProject.buildDictionaries
    }
}
repositories {
    mavenCentral()
}
